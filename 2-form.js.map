{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["import JustValidate from 'just-validate';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet LOCAL_VALUES = 'feedback-form-state';\n\nlet formData = getStorageData();\n\nupdateText();\n\nconst currentForm = document.querySelector('.feedback-form');\n\ncurrentForm.addEventListener('input', e => {\n  if (e.target.name !== 'email' && e.target.name !== 'message') {\n    return;\n  }\n\n  updateLocalStorage(prepareData(e.target.name, e.target.value));\n});\n\nfunction prepareData(key, inputData) {\n  formData[key] = inputData.trim();\n  return JSON.stringify(formData);\n}\n\nfunction updateLocalStorage(dataUpdate) {\n  localStorage.setItem(LOCAL_VALUES, dataUpdate);\n}\n\nfunction getStorageData() {\n  return (\n    JSON.parse(localStorage.getItem(LOCAL_VALUES)) || { email: '', message: '' }\n  );\n}\n\nfunction updateText() {\n  formData = getStorageData();\n  for (const key in formData) {\n    const keyValue = formData[key];\n    const field = document.querySelector(`[name=\"${key}\"]`);\n    if (field) {\n      field.value = keyValue;\n    }\n  }\n}\n\nconst validator = new JustValidate('.feedback-form');\n\nvalidator\n  .addField('[name=\"email\"]', [\n    {\n      rule: 'required',\n      errorMessage: \"Поле email - обов'язкове\",\n    },\n    {\n      rule: 'email',\n      errorMessage: 'Не правильний формат. Перевірте ще раз.',\n    },\n  ])\n  .addField('[name=\"message\"]', [\n    {\n      validator: value => {\n        return value !== undefined && String(value).trim().length > 3;\n      },\n      errorMessage: 'Повідомлення повинне бути не менше 3 символів.',\n    },\n  ])\n  .onSuccess(() => {\n    console.log('success', formData);\n    localStorage.removeItem(LOCAL_VALUES);\n    formData = getStorageData();\n    currentForm.reset();\n  });\n\ncurrentForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  if (!formData.email || !formData.message) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Fill please all fields',\n    });\n    return;\n  }\n\n  console.log(formData);\n\n  localStorage.removeItem(LOCAL_VALUES);\n  currentForm.reset();\n  formData = { email: '', message: '' };\n});\n"],"names":["LOCAL_VALUES","formData","getStorageData","updateText","currentForm","updateLocalStorage","prepareData","key","inputData","dataUpdate","keyValue","field","validator","JustValidate","value","iziToast"],"mappings":"0IAIA,IAAIA,EAAe,sBAEfC,EAAWC,EAAgB,EAE/BC,EAAY,EAEZ,MAAMC,EAAc,SAAS,cAAc,gBAAgB,EAE3DA,EAAY,iBAAiB,QAAS,GAAK,CACrC,EAAE,OAAO,OAAS,SAAW,EAAE,OAAO,OAAS,WAInDC,EAAmBC,EAAY,EAAE,OAAO,KAAM,EAAE,OAAO,KAAK,CAAC,CAC/D,CAAC,EAED,SAASA,EAAYC,EAAKC,EAAW,CACnC,OAAAP,EAASM,CAAG,EAAIC,EAAU,KAAM,EACzB,KAAK,UAAUP,CAAQ,CAChC,CAEA,SAASI,EAAmBI,EAAY,CACtC,aAAa,QAAQT,EAAcS,CAAU,CAC/C,CAEA,SAASP,GAAiB,CACxB,OACE,KAAK,MAAM,aAAa,QAAQF,CAAY,CAAC,GAAK,CAAE,MAAO,GAAI,QAAS,EAAE,CAE9E,CAEA,SAASG,GAAa,CACpBF,EAAWC,EAAgB,EAC3B,UAAWK,KAAON,EAAU,CAC1B,MAAMS,EAAWT,EAASM,CAAG,EACvBI,EAAQ,SAAS,cAAc,UAAUJ,CAAG,IAAI,EAClDI,IACFA,EAAM,MAAQD,EAEpB,CACA,CAEA,MAAME,EAAY,IAAIC,EAAa,gBAAgB,EAEnDD,EACG,SAAS,iBAAkB,CAC1B,CACE,KAAM,WACN,aAAc,0BACf,EACD,CACE,KAAM,QACN,aAAc,yCACf,CACF,CAAA,EACA,SAAS,mBAAoB,CAC5B,CACE,UAAWE,GACFA,IAAU,QAAa,OAAOA,CAAK,EAAE,KAAI,EAAG,OAAS,EAE9D,aAAc,gDACf,CACF,CAAA,EACA,UAAU,IAAM,CACf,QAAQ,IAAI,UAAWb,CAAQ,EAC/B,aAAa,WAAWD,CAAY,EACpCC,EAAWC,EAAgB,EAC3BE,EAAY,MAAO,CACvB,CAAG,EAEHA,EAAY,iBAAiB,SAAU,GAAK,CAG1C,GAFA,EAAE,eAAgB,EAEd,CAACH,EAAS,OAAS,CAACA,EAAS,QAAS,CACxCc,EAAS,MAAM,CACb,MAAO,QACP,QAAS,wBACf,CAAK,EACD,MACJ,CAEE,QAAQ,IAAId,CAAQ,EAEpB,aAAa,WAAWD,CAAY,EACpCI,EAAY,MAAO,EACnBH,EAAW,CAAE,MAAO,GAAI,QAAS,EAAI,CACvC,CAAC"}